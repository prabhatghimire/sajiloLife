# Generated by Django 4.2.7 on 2025-07-27 15:28

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("partners", "__first__"),
    ]

    operations = [
        migrations.CreateModel(
            name="DeliveryRequest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("pickup_address", models.TextField()),
                ("dropoff_address", models.TextField()),
                (
                    "pickup_lat",
                    models.DecimalField(
                        blank=True,
                        decimal_places=8,
                        max_digits=10,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("-90")),
                            django.core.validators.MaxValueValidator(Decimal("90")),
                        ],
                    ),
                ),
                (
                    "pickup_lng",
                    models.DecimalField(
                        blank=True,
                        decimal_places=8,
                        max_digits=11,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("-180")),
                            django.core.validators.MaxValueValidator(Decimal("180")),
                        ],
                    ),
                ),
                (
                    "dropoff_lat",
                    models.DecimalField(
                        blank=True,
                        decimal_places=8,
                        max_digits=10,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("-90")),
                            django.core.validators.MaxValueValidator(Decimal("90")),
                        ],
                    ),
                ),
                (
                    "dropoff_lng",
                    models.DecimalField(
                        blank=True,
                        decimal_places=8,
                        max_digits=11,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("-180")),
                            django.core.validators.MaxValueValidator(Decimal("180")),
                        ],
                    ),
                ),
                ("customer_name", models.CharField(max_length=100)),
                ("customer_phone", models.CharField(max_length=20)),
                ("delivery_notes", models.TextField(blank=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("assigned", "Assigned to Partner"),
                            ("picked_up", "Picked Up"),
                            ("in_transit", "In Transit"),
                            ("delivered", "Delivered"),
                            ("cancelled", "Cancelled"),
                            ("failed", "Failed"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                (
                    "estimated_distance",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Estimated distance in kilometers",
                        max_digits=8,
                        null=True,
                    ),
                ),
                (
                    "estimated_duration",
                    models.IntegerField(
                        blank=True, help_text="Estimated duration in minutes", null=True
                    ),
                ),
                (
                    "actual_distance",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Actual distance in kilometers",
                        max_digits=8,
                        null=True,
                    ),
                ),
                (
                    "actual_duration",
                    models.IntegerField(
                        blank=True, help_text="Actual duration in minutes", null=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_synced", models.BooleanField(default=True)),
                ("local_id", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "customer",
                    models.ForeignKey(
                        limit_choices_to={"role": "customer"},
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="delivery_requests",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "partner",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="delivery_requests",
                        to="partners.deliverypartner",
                    ),
                ),
            ],
            options={
                "db_table": "delivery_requests",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="SyncLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sync_status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("success", "Success"),
                            ("failed", "Failed"),
                            ("retry", "Retry"),
                        ],
                        max_length=20,
                    ),
                ),
                ("error_message", models.TextField(blank=True)),
                ("retry_count", models.IntegerField(default=0)),
                ("synced_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "request",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sync_logs",
                        to="delivery.deliveryrequest",
                    ),
                ),
            ],
            options={
                "db_table": "sync_logs",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["request"], name="sync_logs_request_5868ab_idx"
                    ),
                    models.Index(
                        fields=["sync_status"], name="sync_logs_sync_st_8b9270_idx"
                    ),
                    models.Index(
                        fields=["created_at"], name="sync_logs_created_07d9f3_idx"
                    ),
                ],
            },
        ),
        migrations.AddIndex(
            model_name="deliveryrequest",
            index=models.Index(
                fields=["customer"], name="delivery_re_custome_dfd2f2_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="deliveryrequest",
            index=models.Index(
                fields=["partner"], name="delivery_re_partner_da9366_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="deliveryrequest",
            index=models.Index(fields=["status"], name="delivery_re_status_e57df3_idx"),
        ),
        migrations.AddIndex(
            model_name="deliveryrequest",
            index=models.Index(
                fields=["created_at"], name="delivery_re_created_1135e2_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="deliveryrequest",
            index=models.Index(
                fields=["is_synced"], name="delivery_re_is_sync_151e99_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="deliveryrequest",
            index=models.Index(
                fields=["local_id"], name="delivery_re_local_i_508596_idx"
            ),
        ),
    ]
